# Build and deploy portfolio to GitHub Pages
name: Build and Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: "npm"
          
      - name: Install dependencies
        run: npm ci -f
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Deploy to GitHub Pages repository
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Validate that PAT_TOKEN is available
          if [ -z "$PAT_TOKEN" ]; then
            echo "Error: PAT_TOKEN secret is not set. Please configure a Personal Access Token."
            exit 1
          fi
          
          # Clone the target repository
          echo "Cloning jounaidayoub.github.io repository..."
          git clone https://x-access-token:${PAT_TOKEN}@github.com/Jounaidayoub/jounaidayoub.github.io.git gh-pages-repo
          
          # Configure git
          cd gh-pages-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Clear existing content (except .git)
          find . -maxdepth 1 ! -name '.git' ! -name '.' ! -name '..' -exec rm -rf {} +
          
          # Copy new build files
          echo "Copying build files..."
          cp -r ../dist/* .
          
          # Check if there are any changes
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes to deploy"
            exit 0
          fi
          
          # Commit and push changes
          git add .
          git commit -m "Deploy portfolio from ${{ github.repository }}@${{ github.sha }}"
          git push origin main
          
          echo "âœ… Successfully deployed to GitHub Pages!"
